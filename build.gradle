import static org.gradle.internal.os.OperatingSystem.*

plugins {
    id 'maven'
    id 'java'
    id "org.jetbrains.kotlin.jvm" version "1.3.21"
    id "com.github.johnrengelman.shadow" version '4.0.4'
}

// jitpack
group = 'com.github.kotlin-graphics'

ext{
    moduleName = 'com.github.kotlin_graphics.imgui'
    kotlin = 'org.jetbrains.kotlin:kotlin'
    kotlin_version = '1.3.21'
    kotlintest_version = '3.2.1'
    lwjgl_version = "3.2.2-SNAPSHOT"
    lwjgl_natives = current() == WINDOWS ? "windows" : current() == LINUX ? "linux" : "macos"
}

dependencies {

    implementation "$kotlin-stdlib"

    implementation 'com.github.kotlin-graphics:uno-sdk:b71af68b140fcc10ee73f8833cf604bdb15ec64e'

    testImplementation "io.kotlintest:kotlintest-runner-junit5:$kotlintest_version".toString()

    def joglVersion = '2.3.2'
    implementation "org.jogamp.gluegen:gluegen-rt-main:$joglVersion"
    implementation "org.jogamp.jogl:jogl-all-main:$joglVersion"

    ["", "-glfw", "-jemalloc", "-opengl", "-stb", "-remotery"].each {
        String base = "org.lwjgl:lwjgl$it:$lwjgl_version"
        implementation base
        testRuntime "$base:natives-$lwjgl_natives"
        shadow "$base:natives-$lwjgl_natives"
    }

    compile files("${System.properties['java.home']}/../lib/tools.jar") // for debug, classes instances
}

repositories {
    mavenCentral()
    maven { setUrl("https://oss.sonatype.org/content/repositories/snapshots/") }
    maven { url 'https://jitpack.io' }
}

task lightJar(type: Jar) {
    classifier = 'light'
    from sourceSets.main.output
    exclude 'extraFonts'
    inputs.property("moduleName", moduleName)
    manifest {
        attributes('Automatic-Module-Name': moduleName)
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives lightJar
    archives sourcesJar
    archives javadocJar
}

shadowJar {
    exclude 'module-info.class'
    inputs.property("moduleName", moduleName)
    manifest.attributes('Automatic-Module-Name': moduleName)
}

jar {
    inputs.property("moduleName", moduleName)
    manifest.attributes('Automatic-Module-Name': moduleName)
}

shadowJar.archiveClassifier = 'all'